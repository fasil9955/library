{"ast":null,"code":"var _jsxFileName = \"D:\\\\skill lab 2\\\\final project\\\\library\\\\src\\\\Components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { Container, Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = e => {\n    e.preventDefault();\n\n    // Here, you can add your authentication logic.\n    // For demonstration purposes, let's just check if the fields are filled.\n\n    if (username && password) {\n      alert('Login successful!');\n    } else {\n      alert('Please fill in both fields.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"d-flex justify-content-center align-items-center vh-100\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"login-form\",\n          onSubmit: handleLogin,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"mb-4\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"username\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter your username\",\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Enter your password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Login, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Container","Form","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","username","setUsername","useState","password","setPassword","handleLogin","e","preventDefault","alert","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","type","placeholder","value","onChange","target","required","variant","_c","$RefreshReg$"],"sources":["D:/skill lab 2/final project/library/src/Components/Login.js"],"sourcesContent":["import { Container, Form, Button } from 'react-bootstrap';\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Here, you can add your authentication logic.\r\n    // For demonstration purposes, let's just check if the fields are filled.\r\n\r\n    if (username && password) {\r\n      alert('Login successful!');\r\n    } else {\r\n      alert('Please fill in both fields.');\r\n    }\r\n  };\r\n    return ( \r\n      <>\r\n      <body>\r\n    <Container className=\"d-flex justify-content-center align-items-center vh-100\">\r\n      <Form className=\"login-form\" onSubmit={handleLogin}>\r\n        <h2 className=\"mb-4\">Login</h2>\r\n        <Form.Group className=\"mb-3\" controlId=\"username\">\r\n          <Form.Label>Username:</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter your username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"password\">\r\n          <Form.Label>Password:</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Login\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n      </body>\r\n    </>\r\n    \r\n    \r\n     );\r\n}\r\n \r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}